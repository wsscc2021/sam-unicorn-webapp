Transform: AWS::Serverless-2016-10-31

Description: >
  This project will provision to serverless web application that using API Gateway, Lambda and DynamoDB

Globals:
  Function:
    Timeout: 30
    Tracing: Active # Active or PassThrough
    MemorySize: 1024
    VpcConfig:
      SecurityGroupIds: 
        - sg-0cd7ea0fcf485c241
      SubnetIds: 
        - subnet-0c15ef39cdd9fe459
        - subnet-072f8c5fa5ef1ad11

# Metadata:
#   template metadata

# Parameters:
#   set of parameters

# Mappings:
#   set of mappings

# Conditions:
#   set of conditions

Resources:
  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: unicorn
      BillingMode: PAY_PER_REQUEST
      # ProvisionedThroughput: 
      #   ProvisionedThroughput
      KeySchema: 
        - AttributeName: unicornName
          KeyType: HASH # HASH - Partition key, RANGE - Sort key
      AttributeDefinitions: 
        - AttributeName: unicornName
          AttributeType: S
      # ContributorInsightsSpecification: 
      #   ContributorInsightsSpecification
      # GlobalSecondaryIndexes: 
      #   - GlobalSecondaryIndex
      # KinesisStreamSpecification: 
      #   KinesisStreamSpecification
      # LocalSecondaryIndexes: 
      #   - LocalSecondaryIndex
      PointInTimeRecoverySpecification: 
        PointInTimeRecoveryEnabled: True
      SSESpecification: 
        # KMSMasterKeyId: String
        SSEEnabled: True
        SSEType: KMS
      # StreamSpecification: 
      #   StreamSpecification
      TimeToLiveSpecification: 
        AttributeName: expire
        Enabled: True
      Tags: 
        - Key: Name
          Value: unicorn
    
  CreateUnicornFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: useast1-unicorn-createFunction
      Description: description
      # AutoPublishAlias: String
      # AutoPublishCodeSha256: String
      # CodeSigningConfigArn: String
      Runtime: python3.9
      PackageType: Zip # Zip or Imagee
      CodeUri: src/createUnicorn
      Handler: function.lambda_handler
      Layers:
      - arn:aws:lambda:us-east-1:242593025403:layer:python-aws-xray-sdk:2
      # DeadLetterQueue: Map | DeadLetterQueue
      # DeploymentPreference: DeploymentPreference
      # Environment: Environment
      # KmsKeyArn: String
      # EventInvokeConfig: EventInvokeConfiguration
      Events:
        ApiEvent:
          Type: Api
          Properties:
            # Auth: ApiFunctionAuth
            Method: post
            Path: /unicorns/{unicorn}
            RequestModel:
              Model: UnicornModel
              Required: True
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref APIGateway
      # Role: String
      # AssumeRolePolicyDocument: JSON
      Policies: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      - DynamoDBWritePolicy:
          TableName: !Ref DynamoDBTable
      # ProvisionedConcurrencyConfig: ProvisionedConcurrencyConfig
      # ReservedConcurrentExecutions: Integer
      # Tags: Map

  UpdateUnicornFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: useast1-unicorn-updateFunction
      Description: description
      # AutoPublishAlias: String
      # AutoPublishCodeSha256: String
      # CodeSigningConfigArn: String
      Runtime: python3.9
      PackageType: Zip # Zip or Imagee
      CodeUri: src/updateUnicorn
      Handler: function.lambda_handler
      Layers:
      - arn:aws:lambda:us-east-1:242593025403:layer:python-aws-xray-sdk:2
      # DeadLetterQueue: Map | DeadLetterQueue
      # DeploymentPreference: DeploymentPreference
      Environment: 
        Variables: 
          UNICORN_READ_FUNCTION: useast1-unicorn-getFunction
      # KmsKeyArn: String
      # EventInvokeConfig: EventInvokeConfiguration
      Events:
        ApiEvent:
          Type: Api
          Properties:
            # Auth: ApiFunctionAuth
            Method: put
            Path: /unicorns/{unicorn}
            RequestModel:
              Model: UnicornModel
              Required: True
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref APIGateway
      # Role: String
      # AssumeRolePolicyDocument: JSON
      Policies: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      - DynamoDBWritePolicy:
          TableName: !Ref DynamoDBTable
      - LambdaInvokePolicy:
          FunctionName: useast1-unicorn-getFunction
      # ProvisionedConcurrencyConfig: ProvisionedConcurrencyConfig
      # ReservedConcurrentExecutions: Integer
      # Tags: Map

  DeleteUnicornFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: useast1-unicorn-deleteFunction
      Description: description
      # AutoPublishAlias: String
      # AutoPublishCodeSha256: String
      # CodeSigningConfigArn: String
      Runtime: python3.9
      PackageType: Zip # Zip or Imagee
      CodeUri: src/deleteUnicorn
      Handler: function.lambda_handler
      Layers:
      - arn:aws:lambda:us-east-1:242593025403:layer:python-aws-xray-sdk:2
      # DeadLetterQueue: Map | DeadLetterQueue
      # DeploymentPreference: DeploymentPreference
      # Environment: Environment
      # KmsKeyArn: String
      # EventInvokeConfig: EventInvokeConfiguration
      Events:
        ApiEvent:
          Type: Api
          Properties:
            # Auth: ApiFunctionAuth
            Method: delete
            Path: /unicorns/{unicorn}
            # RequestModel: RequestModel
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref APIGateway
      # Role: String
      # AssumeRolePolicyDocument: JSON
      Policies: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      - DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBTable
      # ProvisionedConcurrencyConfig: ProvisionedConcurrencyConfig
      # ReservedConcurrentExecutions: Integer
      # Tags: Map

  GetUnicornFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: useast1-unicorn-getFunction
      Description: description
      # AutoPublishAlias: String
      # AutoPublishCodeSha256: String
      # CodeSigningConfigArn: String
      Runtime: python3.9
      PackageType: Zip # Zip or Imagee
      CodeUri: src/getUnicorn
      Handler: function.lambda_handler
      Layers:
      - arn:aws:lambda:us-east-1:242593025403:layer:python-aws-xray-sdk:2
      # DeadLetterQueue: Map | DeadLetterQueue
      # DeploymentPreference: DeploymentPreference
      # Environment: Environment
      # KmsKeyArn: String
      # EventInvokeConfig: EventInvokeConfiguration
      Events:
        ApiEvent:
          Type: Api
          Properties:
            # Auth: ApiFunctionAuth
            Method: get
            Path: /unicorns
            # RequestModel: RequestModel
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref APIGateway
        ApiEvent2:
          Type: Api
          Properties:
            # Auth: ApiFunctionAuth
            Method: get
            Path: /unicorns/{unicorn}
            # RequestModel: RequestModel
            # RequestParameters: String | RequestParameter
            RestApiId: !Ref APIGateway
      # Role: String
      # AssumeRolePolicyDocument: JSON
      Policies: # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
      - DynamoDBReadPolicy:
          TableName: !Ref DynamoDBTable
      # ProvisionedConcurrencyConfig: ProvisionedConcurrencyConfig
      # ReservedConcurrentExecutions: Integer
      # Tags: Map


  APIGateway:
    Type: AWS::Serverless::Api
    Properties:
      # AccessLogSetting: AccessLogSetting
      # Auth: ApiAuth
      # BinaryMediaTypes: List
      # CacheClusterEnabled: Boolean
      # CacheClusterSize: String
      # CanarySetting: CanarySetting
      # Cors: String | CorsConfiguration
      # DefinitionBody: String
      # DefinitionUri: String | ApiDefinition
      Description: APIGatewayDescription
      # Domain: DomainConfiguration
      # EndpointConfiguration: EndpointConfiguration
      # GatewayResponses: Map
      # MethodSettings: MethodSettings
      # MinimumCompressionSize: Integer
      Mode: overwrite # overwrite or merge
      Models:
        UnicornModel:
          $schema: 'http://json-schema.org/draft-04/mySchema#'
          type: object
          properties:
            intelligence:
              type: integer
              minimum: 0
              maximum: 100
            strength:
              type: integer
              minimum: 0
              maximum: 100
            luck:
              type: integer
              minimum: 0
              maximum: 100
          required:
            - intelligence
            - strength
            - luck
      Name: useast1-unicorn-apigateway
      # OpenApiVersion: String
      StageName: dev
      # Tags: Map
      TracingEnabled: True
      # Variables: Map

# Outputs:
#   set of outputs